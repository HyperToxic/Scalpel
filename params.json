{
  "name": "Scalpel",
  "tagline": "Auto wired framework for Android",
  "body": "### Features\r\n- Auto find views, int, String, bool, array...\r\n- OnClick listener, action, args.\r\n- Auto bind AIDL service.\r\n- Auto find System services, PowerManager, TelephonyManager, etc\r\n- Auto require permission (for SDK above M).\r\n\r\n### Usage\r\n\r\nAdd dependencies\r\n``` java\r\ndependencies {\r\n    compile 'com.nick.scalpel:scalpel:0.3'\r\n}\r\n```\r\n\r\n1. Configurations customize:\r\n``` java\r\npublic class MyApplication extends Application {\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        Scalpel.getDefault().config(Configuration.builder().autoFindIfNull(true).debug(true).logTag(\"Scalpel\").build());\r\n    }\r\n}\r\n```\r\n\r\n2. Use auto activity or wire things manually\r\n``` java\r\npublic class MainActivity extends ScalpelAutoActivity {}\r\n\r\npublic class MyFragment extends ScalpelAutoFragment {}\r\n\r\npublic class MyService extends ScalpelAutoService {}\r\n```\r\n\r\n``` java\r\npublic class ViewHolder {\r\n    @AutoFound(id = R.id.toolbar) // Same as @AutoFound(id = R.id.toolbar, type = Type.Auto)\r\n            Toolbar toolbar;\r\n\r\n    @AutoFound(id = R.id.fab)\r\n    @OnClick(listener = \"mokeListener\")\r\n    FloatingActionButton fab;\r\n\r\n    @AutoFound\r\n    TelephonyManager tm;\r\n\r\n    @AutoFound\r\n    NotificationManager nm;\r\n\r\n    ViewHolder(Context context) {\r\n        View rootV = LayoutInflater.from(context).inflate(R.layout.activity_main, null);\r\n        Scalpel.getDefault().wire(rootV, this);\r\n        Scalpel.getDefault().wire(context, this);\r\n\r\n        log(toolbar, fab, hello, size, color, text, bool, strs, ints);\r\n    }\r\n}\r\n```\r\n\r\n### Example\r\n``` java\r\npublic class MainActivity extends ScalpelAutoActivity implements AutoBind.Callback {\r\n\r\n    @AutoFound(id = R.id.toolbar, type = Type.View)\r\n    Toolbar toolbar;\r\n\r\n    @AutoFound(id = R.id.fab)\r\n    @OnClick(action = \"showSnack\", args = {\"Hello, I am a fab!\", \"Nick\"})\r\n    FloatingActionButton fab;\r\n\r\n    @AutoFound(id = R.id.hello)\r\n    @OnClick(listener = \"mokeListener\")\r\n    TextView hello;\r\n\r\n    @AutoFound(id = R.integer.size, type = Type.Integer)\r\n    int size;\r\n\r\n    @AutoFound(id = R.color.colorAccent, type = Type.Color)\r\n    int color;\r\n\r\n    @AutoFound(id = R.string.app_name, type = Type.String)\r\n    String text;\r\n\r\n    @AutoFound(id = R.bool.boo, type = Type.Bool)\r\n    boolean bool;\r\n\r\n    @AutoFound(id = R.array.strs, type = Type.StringArray)\r\n    String[] strs;\r\n\r\n    @AutoFound(id = R.array.ints, type = Type.IntArray)\r\n    int[] ints;\r\n\r\n    @AutoFound\r\n    AlarmManager alarmManager;\r\n\r\n    @AutoBind(action = \"com.nick.service\", pkg = \"com.nick.scalpeldemo\", callback = \"this\")\r\n    IMyAidlInterface mService;\r\n\r\n    private View.OnClickListener mokeListener = new View.OnClickListener() {\r\n        @Override\r\n        public void onClick(View v) {\r\n            Snackbar.make(v, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                    .setAction(\"Action\", null).show();\r\n        }\r\n    };\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        setSupportActionBar(toolbar);\r\n\r\n        hello.setTextSize(size);\r\n        hello.setTextColor(color);\r\n        hello.setText(text + \"-\" + bool + \"-\" + Arrays.toString(strs) + \"-\" + Arrays.toString(ints));\r\n\r\n        new ViewHolder(this);\r\n    }\r\n\r\n    public void showSnack(String content, String owner) {\r\n        Snackbar.make(getWindow().getDecorView(), owner + \": \" + content, Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show();\r\n    }\r\n\r\n    @Override\r\n    public void onServiceBound(ComponentName name, ServiceConnection connection) {\r\n        mCallback.onServiceBound(name, connection);\r\n    }\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}